{"version":3,"sources":["components/Task.js","components/Tasks.js","components/TaskForm.js","components/Posts.js","App.js","index.js"],"names":["Task","color","this","props","task","done","backgroundColor","textDecoration","className","style","setStyle","title","description","id","type","onChange","checkDone","bind","btnDelete","onClick","deleteTask","Component","fontSize","borderRadius","border","Tasks","tasks","map","element","key","TaskForm","state","cancelSubmit","event","addTask","preventDefault","onChanges","setState","target","name","value","onSubmit","placeholder","Post","posts","fetch","res","json","data","post","body","App","newTask","length","newTasks","filter","to","exact","path","render","component","Posts","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.972d0264.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\"; // READ THE DOCUMENTATION ABOUT THIS PACKAGE\r\n\r\nclass Task extends Component{\r\n\r\n    setStyle() {\r\n        return {\r\n            color: this.props.task.done ? \"white\" : \"black\",\r\n            backgroundColor: this.props.task.done ? \"black\" : \"gray\",\r\n            textDecoration: this.props.task.done ? \"line-through\" : \"none\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {task} = this.props;\r\n        return  <p className=\"red\" style={this.setStyle()}> \r\n                {/* you can use for the style of an element a link with a .css file */}\r\n                {/* or an attribute style={} filled with an object (defined in the style attribute or called from a variable (**) ) */}\r\n                    {task.title} - {task.description} - {task.done} - {task.id}\r\n                    <input type=\"checkbox\" onChange={this.props.checkDone.bind(this, task.id)}/>\r\n                    <button style={btnDelete} onClick={this.props.deleteTask.bind(this, task.id)}> {/* */}\r\n                        x\r\n                    </button> \r\n                </p>\r\n    }\r\n}\r\n\r\n// The code below verifies if the element getting through props has the correct type.\r\nTask.propTypes = {\r\n    task: PropTypes.object.isRequired,\r\n}\r\n\r\n// (**)\r\nconst btnDelete = {\r\n    fontSize: \"24px\",\r\n    borderRadius: \"50%\",\r\n    border: \"none\",\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport Task from './Task';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tasks extends Component {\r\n    render() {\r\n        return  this.props.tasks.map( \r\n            element => \r\n            <Task \r\n                task={element} \r\n                deleteTask={this.props.deleteTask} \r\n                key={element.id} \r\n                checkDone={this.props.checkDone}\r\n            />)\r\n    }\r\n}\r\n\r\nTasks.propTypes = {\r\n    tasks: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Tasks;","import React, { Component } from 'react';\r\n\r\nexport default class TaskForm extends Component {\r\n    \r\n    state = {\r\n        title: '',\r\n        description: '',\r\n    }\r\n\r\n    cancelSubmit = event => {\r\n        this.props.addTask(this.state.title, this.state.description);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onChanges = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <form onSubmit={this.cancelSubmit}>\r\n                <input type=\"text\" name=\"title\" placeholder=\"Whrite a Task\" onChange={this.onChanges} />\r\n                <br />\r\n                <br />\r\n                <textarea placeholder=\"Write a Description\" name=\"description\" onChange={this.onChanges}></textarea>\r\n                <br />\r\n                <input type=\"submit\" value=\"Add Task\"/>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Post extends Component {\r\n\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\"); // CHECK THIS METHOD AND HIS DOCUMENTATION\r\n        const data = await res.json();\r\n        // console.log(data);\r\n        this.setState({posts: data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Posts</h1>\r\n                {\r\n                    this.state.posts.map(post => {\r\n                        return <div key={post.id}>\r\n                            <h2>{post.id}. {post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router , Route, Link } from 'react-router-dom'\r\n\r\nimport './App.css';\r\n\r\nimport tasks from './sample/tasks.json';\r\n\r\nimport Tasks from './components/Tasks';\r\nimport TaskForm from './components/TaskForm';\r\nimport Posts from './components/Posts'\r\n\r\nclass App extends Component{\r\n\r\n  state = {\r\n    tasks: tasks,\r\n  }\r\n\r\n  addTask = (title, description) => {\r\n    const newTask = {\r\n      title: title,\r\n      description: description,\r\n      id: this.state.tasks.length,\r\n      done: false,\r\n    };\r\n    this.setState({\r\n      tasks: [...this.state.tasks, newTask],\r\n    })\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter( task => task.id !== id);\r\n    this.setState({ tasks: newTasks});\r\n  }\r\n\r\n  checkDone = (id) => {\r\n    const checkDone = this.state.tasks.map( task => {\r\n        if( task.id === id ){\r\n          task.done = !task.done;\r\n        }\r\n        return task;\r\n      });\r\n    this.setState({ task: checkDone });\r\n  }\r\n\r\n  render () {\r\n    return  <div>\r\n              <Router>\r\n                <Link to=\"/\">Home</Link> {/* CHECK THE DOCUMENTATION ABOUT LINK */}\r\n                <br />\r\n                <Link to=\"/posts\">Posts</Link>\r\n\r\n                <Route exact path=\"/\" render={() => <div>\r\n                      <TaskForm addTask={this.addTask} />\r\n                      <Tasks \r\n                        tasks={this.state.tasks}\r\n                        deleteTask={this.deleteTask} \r\n                        checkDone={this.checkDone} \r\n                      />\r\n                    </div>\r\n                  }>\r\n                </Route>\r\n                <Route path=\"/posts\" component={Posts} />\r\n              </Router>\r\n            </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}